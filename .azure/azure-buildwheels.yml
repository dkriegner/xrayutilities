name: $(Date:yyyyMMdd)$(Rev:rr)

# trigger build only after successful test on main-branch
resources:
  pipelines:
  - pipeline: testing
    source: testing
    trigger:
      branches:
        include:
        - refs/head/main
        - refs/tags/v*

trigger: none
pr: none

variables:
  CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
  CIBW_BEFORE_BUILD: pip install numpy scipy h5py
  CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  DEVVERSION: post$(Build.BuildNumber)
  python_version: 3.11

jobs:
- job: linux
  pool: {vmImage: 'ubuntu-latest'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python_version)'
      displayName: 'Use Python $(python_version)'
    - bash: |
        set -o errexit
        python3 -m pip install --upgrade pip
        pip3 install numpy scipy h5py
        pip3 install cibuildwheel
        pip3 install twine
      displayName: Install dependencies
    - bash: echo $DEVVERSION >> lib/xrayutilities/VERSION
      condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
      displayName: Set unique VERSION
    - bash: python3 setup.py sdist
      displayName: Build sdist
    - bash: cibuildwheel --output-dir wheelhouse .
      displayName: Build wheels
    - task: TwineAuthenticate@0
      inputs:
        artifactFeeds: 'xrayutilities/xrayutilities-dev'
    - script: 'twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*'
      displayName: Publish Wheels
    - script: 'twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) dist/*'
      displayName: Publish sdist

- job: macos
  pool: {vmImage: 'macOS-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        set -o errexit
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel
        pip3 install twine
      displayName: Install dependencies
    - bash: echo $DEVVERSION >> lib/xrayutilities/VERSION
      condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
      displayName: Set unique VERSION
    - bash: cibuildwheel --output-dir wheelhouse .
      displayName: Build wheels
    - task: TwineAuthenticate@0
      inputs:
        artifactFeeds: 'xrayutilities/xrayutilities-dev'
    - script: 'twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*'
      displayName: Publish Wheels

- job: windows
  pool: {vmImage: 'windows-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        set -o errexit
        python -m pip install --upgrade pip
        pip install cibuildwheel
        pip install twine
      displayName: Install dependencies
    - bash: echo $DEVVERSION >> lib/xrayutilities/VERSION
      condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
      displayName: Set unique VERSION
    - bash: cibuildwheel --output-dir wheelhouse .
      displayName: Build wheels
    - task: TwineAuthenticate@0
      inputs:
        artifactFeeds: 'xrayutilities/xrayutilities-dev'
    - script: 'twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*'
      displayName: Publish Wheels
