name: $(Date:yyyyMMdd)$(Rev:rr)

# trigger build only after successful test on main-branch
resources:
  pipelines:
    - pipeline: testing
      source: testing
      trigger:
        branches:
          include:
            - refs/head/main
            - refs/tags/v*

trigger: none
pr: none

variables:
  CIBW_BUILD: cp39-* cp310-* cp311-* cp312-* cp313-*
  CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_BUILD_VERBOSITY: 1
  python_version: 3.12

jobs:
  - job: linux
    pool: { vmImage: "ubuntu-latest" }
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python_version)"
        displayName: "Use Python $(python_version)"
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install build  # needed for sdist generation
          pip3 install cibuildwheel
          pip3 install twine
          pip3 install mesonbuild
        displayName: Install dependencies
      - bash: |
          #!/bin/bash
          VERSION=$(git describe --tags --always | sed 's/^v//')
          echo "Setting version to: $VERSION"
          meson rewrite kwargs set project / version "$VERSION"
        condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
        displayName: Set version from Git for Development Builds
      - bash: python3 -m build --sdist
        displayName: Build sdist
      - bash: cibuildwheel --output-dir wheelhouse .
        displayName: Build wheels
      - task: TwineAuthenticate@0
        inputs:
          artifactFeeds: "xrayutilities/xrayutilities-dev"
      - script: "twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*"
        displayName: Publish Wheels
      - script: "twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) dist/*"
        displayName: Publish sdist

  - job: macos
    pool: { vmImage: "macOS-latest" }
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          pip3 install cibuildwheel
          pip3 install twine
          pip3 install mesonbuild
        displayName: Install dependencies
      - bash: |
          #!/bin/bash
          VERSION=$(git describe --tags --always | sed 's/^v//')
          echo "Setting version to: $VERSION"
          meson rewrite kwargs set project / version "$VERSION"
        condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
        displayName: Set version from Git for Development Builds
      - bash: cibuildwheel --output-dir wheelhouse .
        displayName: Build wheels
      - task: TwineAuthenticate@0
        inputs:
          artifactFeeds: "xrayutilities/xrayutilities-dev"
      - script: "twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*"
        displayName: Publish Wheels

  - job: windows
    pool: { vmImage: "windows-latest" }
    steps:
      - task: UsePythonVersion@0
      - bash: |
          set -o errexit
          python -m pip install --upgrade pip
          pip install cibuildwheel
          pip install twine
          pip3 install mesonbuild
        displayName: Install dependencies
      - powershell: | # For Windows
          $VERSION = git describe --tags --always | ForEach-Object { $_ -replace '^v' }
          meson rewrite kwargs set project / version "$VERSION"
          Write-Host "meson.build updated to version: $VERSION"
        condition: not(startsWith(variables['build.sourceBranch'], 'refs/tags/'))
        displayName: Set version from Git
      - bash: cibuildwheel --output-dir wheelhouse .
        displayName: Build wheels
      - task: TwineAuthenticate@0
        inputs:
          artifactFeeds: "xrayutilities/xrayutilities-dev"
      - script: "twine upload -r xrayutilities/xrayutilities-dev --config-file $(PYPIRC_PATH) wheelhouse/*"
        displayName: Publish Wheels
