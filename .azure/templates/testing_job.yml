parameters:
  - name: name
    default: ""
  - name: vmImage
    default: ""

jobs:
  - job: ${{ parameters.name }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    strategy:
      matrix:
        Python39:
          python.version: "3.9"
        Python310:
          python.version: "3.10"
        Python311:
          python.version: "3.11"
        Python312:
          python.version: "3.12"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
      - task: Cache@2
        inputs:
          key: testdata20250118
          path: $(System.DefaultWorkingDirectory)/tests/data
          cacheHitVar: TESTDATA_RESTORED
        condition: and(succeeded(), eq(variables['python.version'], '3.12'))
        displayName: Cache test data
      - script: |
          curl -s -L https://sourceforge.net/projects/xrayutilities/files/xrayutilities-testdata-20250118.tar.gz -o xu_testdata.tar.gz
          tar xzf xu_testdata.tar.gz -C tests
        condition: and(succeeded(), ne(variables['TESTDATA_RESTORED'], 'true'), eq(variables['python.version'], '3.12'))
        displayName: Download test data
      - script: |
          pip install -r recommended_requirements.txt
        displayName: Install requirements
      - script: |
          pip install meson-python meson ninja
        displayName: Install build time requirements (editable installation)
      - script: |
          pip install coverage[toml] pytest pytest-cov pytest-azurepipelines pytest-subtests
        displayName: Install test requirements
      - script: |
          pip install -v ".[plot]"
        condition: ne(variables['Agent.OS'], 'Darwin')
        displayName: Install xrayutilities
      - script: |
          pip install -v --config-settings=setup-args="-Denable_openmp=false" ".[plot]"
        condition: eq(variables['Agent.OS'], 'Darwin')
        displayName: "Install xrayutilities without OpenMP"
      - script: |
          pytest --junitxml=junit/test-results.xml --cov --cov-config pyproject.toml --cov-report=xml --doctest-glob="*.rst"
        displayName: Run pytest
      - bash: |
          if [[ "$(Agent.OS)" == "Darwin" ]]; then
            pip install --no-build-isolation --config-settings=setup-args="-Denable_openmp=false" --editable .
          else
            pip install --no-build-isolation --editable .
          fi
          pytest --junitxml=junit/test-results.xml --cov --cov-append --cov-config pyproject.toml --cov-report=xml --doctest-modules  --ignore=lib/xrayutilities/materials/_create_database.py lib
        displayName: Run doctest modules
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: "**/test-*.xml"
          testRunTitle: "Publish test results for Python $(python.version)"
      - task: PublishCodeCoverageResults@2
        inputs:
          summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/coverage.xml"
